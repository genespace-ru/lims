attributes:
  type: dictionary
  primaryKey: ID
  displayName: Аттрибуты
  doc: Аттрибуты (свойства) для аннотации SNV и CNV.

  scheme:
    columns:
    - ID:
        type: KEYTYPE
        autoIncrement: true
        primaryKey: true
    - entity:
        type: VARCHAR(50)
        doc: Сущность, к которой относится данный аттрибут.
    - groupID:
        type: INT
        reference: attribute_groups
        canBeNull: true        
        doc: Группа, к которой принадлежит аттрибут. 
    - title:
        type: VARCHAR(100)
        doc: Название аттрибута. Где это возможно используются названия аттрибутов из VEP и/или Genomenal.
    - title_ru:
        type: VARCHAR(100)
        canBeNull: true        
    - description:
        type: TEXT
        canBeNull: true
        doc: Описание аттрибута. Где это возможно используются названия аттрибутов из VEP и/или Genomenal.
    - description_ru:
        type: TEXT
        canBeNull: true
        doc: Описание аттрибута. Где это возможно используются названия аттрибутов из VEP и/или Genomenal.
    - comment:
        type: TEXT
        canBeNull: true
        doc: Комментарий.
    - type:
        type: INT
        reference: attribute_types
        doc: Тип аттрибута. Используется предопределенный справочник типов аттрибутов attribute_types. 
    - dictionary:
        type: VARCHAR(100)
        canBeNull: true
        doc: Справочник для возможных значений аттрибута. Где это возможно используются значения из VEP и/или Genomenal.
    - rule:
        type: INT
        reference: attribute_rules
        canBeNull: true
        doc: Правило, использованное для вычисления аттрибута.
    - storage:      
        type: ENUM('json', 'query')
        doc: |-
            Где хранится значение аттрибута.
            * json - в формате json поля 'attributes' соответствующей таблицы сущности.
            * query - вычисляется значением запроса и идет как поле значений запроса.
    - level:
        type: ENUM('SNV', 'CNV', 'transcript')
        doc: Уровень к которому относится аттрибут - к самой SNV/CNV или транскрипту.
    - displayIfEmpty:
        type: ENUM('yes', 'no')
        doc: Нужно ли показывать значение этого аттрибута в представлении, если оно пустое.
        defaultValue: '''no'''
    - displayOrder:
        type: VARCHAR(5)
        canBeNull: true
        doc: Порядок отображения значения аттрибута в представлении.
    - urlMask:
        type: VARCHAR(100)
        canBeNull: true
        doc: Маска для формирования гиперссылки для значения свойства.
    - creationDate___:
        type: TIMESTAMP
        defaultValue: CURRENT_TIMESTAMP
    - modificationDate___:
        type: TIMESTAMP
        canBeNull: true        
    - whoInserted___:
        type: VARCHAR(100)
        defaultValue: '''Administrator'''
    - whoModified___:
        type: VARCHAR(100)
        canBeNull: true 

  queries:
  - All records:
      type: 1D
      roles: '@AllRoles'
      layout: '{"quickType":"select"}'
      operations:
      - Insert
      - Edit
      - Delete
      - Filter
      code: |2-
            SELECT 
              a.id AS "ID",
              a.entity AS "Entity;<quick visible='false' />",
              
              ag.id AS "___groupID",
              ag.title AS "Group",
              '<link table="attribute_groups" queryName="All records" using="___groupID" columns="ID" />' AS ";Group",
              a.title || '<br/>' || a.title_ru  "Title",
              a.description || '<br/>' || a.description_ru AS "Description",

              a.type AS "Type;<quick visible='false' />",          
              a.storage AS "Storage;<quick visible='false' />",          
              a.level AS "Level;<quick visible='true' />",          
              a.urlMask AS "URL mask;<quick visible='false' />",          
              a.comment AS "Comment;<quick visible='true' />",

              <@COMMON_WHO_FIELDS 'a' />
            FROM attributes a
            LEFT JOIN attribute_groups ag ON ag.id = a.groupID
            ORDER BY ag.displayOrder, a.displayOrder 
            
  - '*** Selection view ***':
      type: 1D_unknown
      roles: '@AllRolesExceptGuest'
      code: |2-
            SELECT id, title FROM attributes ORDER BY title
  operations:
  - Insert:
      roles: [Administrator]
      layout: '{"type":"modalForm"}'
      code: com.developmentontheedge.be5.server.operations.SilentInsertOperation
  - Edit:
      records: 1
      layout: '{"type":"modalForm"}'
      roles: [Administrator]
      code: com.developmentontheedge.be5.server.operations.SilentEditOperation
  - Filter:
      roles: [Administrator]
      layout: '{"type":"modalForm"}'
      code: com.developmentontheedge.be5.server.operations.FilterOperation
  - Delete:
      records: 2
      roles: [Administrator]
      layout: '{"type":"modalForm"}'
      code: com.developmentontheedge.be5.server.operations.SilentDeleteOperation
