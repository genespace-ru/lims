snv_:
  type: table
  primaryKey: ID
  displayName: SNV
  doc: |-
    Список найденных SNV. Для каждого образца создается отдельная таблица,
    где название образца является суффиксом в названии таблицы.
    Например: snv_sample1.
    Поля vcf_(chrom, pos, id, ref, alt, qual, filter, info) являются обязательными
    полями VCF v.4.2 (https://samtools.github.io/hts-specs/VCFv4.2.pdf).
    Их подробное описание смотри в спецификации VCFv4.2.
    Ограничение - один VCF файл должен содержать данные только для одного образца.

  scheme:
    columns:
    - ID:
        type: KEYTYPE
        autoIncrement: true
        primaryKey: true
    - vcf_chrom:
        type: VARCHAR(50)
        doc: Хромосома.
    - vcf_pos:
        type: INT
        doc: Позиция на хромосоме.
    - vcf_id:
        type: VARCHAR(200)
        canBeNull: true 
        doc: Список идентификаторов, разделитель - ;
    - vcf_ref:
        type: VARCHAR(50)
        doc: Основания ( A,C,G,T,N) в референсном геноме.
    - vcf_alt: 
        type: VARCHAR(50)
        doc: Альтернативные основания.
    - vcf_qual:
        type: DECIMAL(4,1)
        canBeNull: true
        doc: Качество, Phred-scaled quality score for the assertion made in ALT.
    - vcf_filter:
        type: VARCHAR(50)
        doc: Статус, PASS - если поизиция прошла все фильтры.
    - vcf_info: 
        type: TEXT
        canBeNull: true
        doc: Дополнительная информация в формате ключ-значение.
    - vcf_format:         
        type: VARCHAR(1000)
        doc: Формат для поля генотип.                 
    - attributes:
        type: JSON 
        canBeNull: true        
        doc: Все аттрибуты (VCF info, format; VEP annotation и другие).

    - pathogenicity:
        type: INT
        reference: pathogenicity
        canBeNull: true        
        doc: Патогенность SNV 
    - pathogenicityAuthority:
        type: INT
        reference: pathogenicity_authority
        canBeNull: true        
        doc: Автор или рекоммендации, по которой проставлена патогенность.
    - isAttached:
        type: ENUM('yes', 'no')
        defaultValue: '''no'''
        doc: Нужно ли закрепить, отмеченные SNV, в начале представления.
    - isHidden:
        type: ENUM('yes', 'no')
        defaultValue: '''no'''
        doc: Нужно ли показывать SNV в представлении.
    - includeInReport:
        type: ENUM('yes', 'no')
        defaultValue: '''no'''
        doc: Нужно ли включать SNV в отчет.
    - reportComment:
        type: ENUM('yes', 'no')
        defaultValue: '''no'''
        doc: Нужно ли включать SNV в отчет.

  queries:
  - All records:
      type: 1D_unknown
      roles: '@AllRolesExceptGuest'
      layout: '{"quickType":"select","hideOperations":["ToggleAttached","ToggleHidden","ToggleIncludeInReport"]}'
      operations:
      - ToggleAttached
      - ToggleHidden
      - ToggleIncludeInReport
      code: |2-
        SELECT 
            s.id AS "___ID",
          
            '<a href="#!form/snv_/All records/ToggleAttached/ID=' || CAST(s.id AS CHAR) || '">' ||
            '<img src="/static/images/pin_16_' || s.isAttached || '.svg" title="Нажмите, чтобы ' ||
            ( CASE WHEN s.isAttached='yes' THEN 'открепить SNV.' ELSE 'закрепить SNV в начале списка.' END) || '"></a>' ||
            
            '<a href="#!form/snv_/All records/ToggleHidden/ID=' || CAST(s.id AS CHAR) || '">' ||
            '<img src="/static/images/hide_16_' || s.isHidden || '.svg" title="Нажмите, чтобы ' ||
            ( CASE WHEN s.isHidden='yes' THEN 'показывать' ELSE 'не показывать' END) || ' SNV в списке."></a>' || 

            '<a href="#!form/snv_/All records/ToggleIncludeInReport/ID=' || CAST(s.id AS CHAR) || '">' ||
            '<img src="/static/images/list_16_' || s.includeInReport || '.svg" title="Нажмите, чтобы ' ||
            ( CASE WHEN s.includeInReport='yes' THEN 'включить' ELSE 'не включать' END) || ' SNV в отчет."></a>' 
            AS "Actions;<nosort/>",
            
            s.vcf_chrom || ':' || s.vcf_pos AS "Location",
            s.vcf_ref || '>' || s.vcf_alt AS "Replacement",
            s.attributes->>'GT' AS "Genotype",
            COALESCE(s.attributes->>'DP' || ' (' || (s.attributes->>'AD') || ')', '') "Read depth (Ref,Alt)",
            CASE WHEN s.attributes->>'VAF' LIKE '%,%' THEN NULL
            ELSE
               ROUND(CAST(s.attributes->>'VAF' AS DECIMAL), 2)*100 
            END 
              AS "Variant allele fraction, %;<quick visible='true' />",
            s.vcf_qual AS "Quality;<quick visible='true' />",
            s.vcf_filter AS "Filter;<quick visible='true' />",
            s.vcf_id AS "IDs;<quick visible='false' />",
            s.vcf_info AS "Info;<quick visible='false' />",
            s.attributes AS "Attributes;<quick visible='false' />"
        FROM snv_sample1 s
        ORDER BY s.isAttached DESC, s.id
  operations:
  - ToggleAttached:
      type: Groovy
      records: 1
      roles: '@AllRolesExceptGuest'
      file: operations.ToggleAttached.groovy
  - ToggleHidden:
      type: Groovy
      records: 1
      roles: '@AllRolesExceptGuest'
      file: operations.ToggleHidden.groovy
  - ToggleIncludeInReport:
      type: Groovy
      records: 1
      roles: '@AllRolesExceptGuest'
      file: operations.ToggleIncludeInReport.groovy
